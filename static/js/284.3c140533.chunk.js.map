{"version":3,"file":"static/js/284.3c140533.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/ShowPassword/ShowPassword.styled.jsx","components/ShowPassword/ShowPassword.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants/media';\n\nexport const FormContainer = styled.form``;\n\nexport const Caption = styled.p`\n  margin: 0;\n  margin-top: 40px;\n  margin-bottom: 55px;\n  margin-right: auto;\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n  color: ${colors.color1};\n  text-align: center;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-top: 160px;\n    text-align: left;\n  }\n`;\n\nexport const Label = styled.span`\n  position: relative;\n  margin: 0;\n  margin-right: auto;\n  font-family: 'Verdana';\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n  color: ${colors.color2};\n`;\n\nexport const ButtonContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { BsFillEyeFill } from 'react-icons/bs';\nimport { BsFillEyeSlashFill } from 'react-icons/bs';\n\nexport const ShowPasswordButton = styled.button`\n  position: absolute;\n  top: 19px;\n  right: 5px;\n  border: none;\n  background-color: transparent;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nexport const ShowIcon = styled(BsFillEyeFill)`\n  width: 18px;\n  fill: rgba(0, 0, 0, 1);\n`;\n\nexport const HideIcon = styled(BsFillEyeSlashFill)`\n  width: 18px;\n  fill: rgba(0, 0, 0, 0.3);\n`;\n","import {\n  ShowPasswordButton,\n  ShowIcon,\n  HideIcon,\n} from './ShowPassword.styled.jsx';\n\nconst ShowPassword = ({ isShown, clickHandler }) => {\n  return (\n    <ShowPasswordButton type=\"button\" onClick={clickHandler}>\n      {isShown ? <ShowIcon /> : <HideIcon />}\n    </ShowPasswordButton>\n  );\n};\n\nexport default ShowPassword;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants/media';\nimport { container } from 'helpers';\n\nexport const LoginFormStyled = styled.div`\n  ${container};\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n`;\n\nexport const FormFields = styled.div`\n  margin-bottom: 60px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    max-width: 240px;\n  }\n`;\n","import { Caption, ButtonContainer } from 'components/Form/Form.styled';\nimport { InputWraper } from 'components/Form/Input.styled';\nimport { Button } from 'components/Styled';\nimport { useNavigate } from 'react-router-dom';\nimport { FormFields, LoginFormStyled } from './LoginForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../../redux/user/operations';\nimport Message from 'components/Message/Message';\nimport ShowPassword from 'components/ShowPassword/ShowPassword';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useState } from 'react';\nimport { selectAuthError } from '../../redux/user/selectors';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const message = useSelector(selectAuthError);\n\n  const schema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Email must be a valid email')\n      .min(3)\n      .max(254)\n      .required('Email is a required field'),\n    password: yup.string().required('Password is a required field'),\n  });\n\n  const initialValues = { email: '', password: '' };\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(logIn(values));\n    //if (!message) resetForm();\n  };\n\n  const onClickHandler = () => {\n    setPasswordShown(state => !state);\n  };\n\n  const navigate = useNavigate();\n  const redirection = () => {\n    const path = '/register';\n\n    navigate(path);\n  };\n\n  return (\n    <LoginFormStyled>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <Caption>Login</Caption>\n          <FormFields>\n            <InputWraper>\n              <Field\n                type=\"text\"\n                name=\"email\"\n                placeholder=\" \"\n                autoComplete=\"off\"\n              />\n              <label htmlFor=\"email\">Email *</label>\n              <ErrorMessage className=\"error\" component=\"div\" name=\"email\" />\n            </InputWraper>\n\n            <InputWraper>\n              <Field\n                type={passwordShown ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\" \"\n                autoComplete=\"off\"\n              />\n              <label htmlFor=\"password\">Password *</label>\n              <ShowPassword\n                clickHandler={onClickHandler}\n                isShown={passwordShown}\n              />\n              <ErrorMessage className=\"error\" component=\"div\" name=\"password\" />\n            </InputWraper>\n          </FormFields>\n          <ButtonContainer>\n            <Button className=\"orange regLogbutton\" type=\"submit\">\n              Log In\n            </Button>\n            <Button\n              className=\"white regLogbutton\"\n              type=\"button\"\n              onClick={redirection}\n            >\n              Register\n            </Button>\n          </ButtonContainer>\n        </Form>\n      </Formik>\n      {message && <Message>{message}</Message>}\n    </LoginFormStyled>\n  );\n};\n","import { Background } from 'components/Background/Background';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from '../redux/user/selectors';\n\nconst Login = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  return (\n    <>\n      <LoginForm />\n      {!isLoggedIn && <Background />}\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["Caption","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","colors","mediaSizes","ButtonContainer","_templateObject3","_templateObject4","ShowPasswordButton","ShowIcon","BsFillEyeFill","HideIcon","BsFillEyeSlashFill","_ref","isShown","clickHandler","_jsx","type","onClick","children","LoginFormStyled","container","FormFields","LoginForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","passwordShown","setPasswordShown","message","useSelector","selectAuthError","schema","yup","shape","email","min","max","required","password","navigate","useNavigate","_jsxs","Formik","initialValues","validationSchema","onSubmit","values","resetForm","logIn","Form","autoComplete","InputWraper","Field","name","placeholder","htmlFor","ErrorMessage","className","component","ShowPassword","state","Button","Message","isLoggedIn","selectIsLoggedIn","_Fragment","Background"],"sourceRoot":""}